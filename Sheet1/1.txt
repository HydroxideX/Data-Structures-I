package pack1;

public class MySpecialArrayUtils{
	
	///////////////1////////////////////
	
	///////////////A////////////////////
	public static void reverse(int[] ar)
	{
		for(int i = 0;i<ar.length/2;i++)
		{
			ar[i] = ar[ar.length-1-i] ^ ar[i];
			ar[ar.length-1-i] = ar[ar.length-1-i] ^ ar[i];
			ar[i] = ar[ar.length-1-i] ^ ar[i];
		}
	}
	
	///////////////B/////////////////////
	public static int[] sumEvenOdd(int [] ar)
	{
		
		int sumOfEvenAndOddElements[] = {0,0};
		if(ar.length == 0)
			return sumOfEvenAndOddElements;
		for(int i = 0;i<ar.length;i++)
		{
			if( (ar[i]&1) != 0)
			{
				 sumOfEvenAndOddElements[1] += ar[i];
			}
			else {
				sumOfEvenAndOddElements[0] += ar[i];
			}
		}
		return sumOfEvenAndOddElements;
	}
	
	/////////////C///////////////////////
	public static double average(int[] ar)
	{
		if(ar.length == 0)
			return 0;
		double average = 0;
		for(int i = 0;i<ar.length;i++)
			average += (double)ar[i]/ar.length;
		return average;
	}
	
	////////////D///////////////////////
	public static void moveValue(int[] ar, int val)
	{
		int j = 0;
		for(int i = 0;i<ar.length;i++)
		{
			while(i<ar.length && ar[i] != val)
				i++;
			if(i != ar.length-1)
			j = i+1;
			while(j<ar.length && ar[j]==val)
				j++;
			if(j!= ar.length)
			{
				ar[i] = ar[j];
				ar[j] = val;
			}
		}
	}
	
	/////////E////////////////////////
	public static void transpose(int[][] ar)
	{
		if(ar.length == 0)
			return;
		int[][] transposeArr = new int [ar[0].length][ar.length];
		for(int i = 0;i<ar.length;i++)
		{
			for(int j = 0;j<ar[i].length;j++)
			{
				transposeArr[j][i] = ar[i][j];
			}
		}
	}	
}
